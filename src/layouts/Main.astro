---
import '../styles/app.sass';
import Contents from '../components/Contents.astro'

const { content: { title }, headings: hs } = Astro.props;

type Headings = {
    href?: string,
    text?: string,
    children: Headings[],
    parent: Headings | null,
}

function toc(headings: any[]){
    const root = {
        children: [],
        parent: null,
    } as Headings;
    let cur = root;
    let depth = 0;
    for(const h of headings){
        const { slug, text, depth: d} = h;
        const href = '#' + slug;
        if(d < depth){
            cur.parent?.parent?.children.push(cur = {
                href, text, parent: cur.parent.parent, children: [],
            })
        }else if(d > depth){
            cur.children.push(cur = {
                href, text, parent: cur, children: [],
            })
        }else{
            cur.parent?.children.push(cur = {
                href, text, parent: cur.parent, children: [],
            })
        }
        depth = d;
    }
    return root;
}

const headings = hs && toc(hs);

const katex = {
    rel: 'stylesheet',
    href: 'https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css',
    crossorigin: 'anonymous',
};

---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="./favicon.svg" />
    <link {...katex} />
    <title>{title}</title>
</head>
<body>
    {hs && <aside class="hide"><Contents {headings}/></aside>}
    <main><slot/></main>
</body>
<script>
    const aside = document.querySelector('aside');
    document.querySelectorAll('input[type="checkbox"]').forEach(
        cb => cb.disabled = false
    )
    if(aside){
        aside.onclick = () => aside.classList.toggle('hide')
        document.querySelectorAll('h1,h2,h3').forEach(
            e => e.onclick = () => aside.classList.toggle('hide')
        )
    }
</script>
</html>

<style lang="sass">
    @use '@floaterest/color' as *
    aside
        position: fixed
        left: 0
        top: 0
        height: 100vh
        background: transparentize($black, 0.5)
        padding-right: 1em
        padding-top: 1em
        z-index: 1
        &.hide
            display: none
        &:not(.hide) ~ main
            filter: blur(2px)
</style>
